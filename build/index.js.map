{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/theme.ts", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { renderToString } from \"react-dom/server\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport type { EntryContext } from \"@remix-run/node\";\r\nimport { injectStyles, createStylesServer } from \"@mantine/remix\";\r\n\r\nconst server = createStylesServer();\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  let markup = renderToString(\r\n    <RemixServer context={remixContext} url={request.url} />\r\n  );\r\n  responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n  return new Response(`<!DOCTYPE html>${injectStyles(markup, server)}`, {\r\n    status: responseStatusCode,\r\n    headers: responseHeaders,\r\n  });\r\n}\r\n", "import type { MetaFunction } from \"@remix-run/node\";\r\nimport {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\nimport { createEmotionCache, MantineProvider } from \"@mantine/core\";\r\nimport { StylesPlaceholder } from \"@mantine/remix\";\r\nimport { theme } from \"./theme\";\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"New Remix App\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\ncreateEmotionCache({ key: \"mantine\" });\r\n\r\nexport default function App() {\r\n  return (\r\n    <MantineProvider theme={theme} withGlobalStyles withNormalizeCSS>\r\n      <html lang=\"en\">\r\n        <head>\r\n          <StylesPlaceholder />\r\n          <Meta />\r\n          <Links />\r\n        </head>\r\n        <body>\r\n          <Outlet />\r\n          <ScrollRestoration />\r\n          <Scripts />\r\n          <LiveReload />\r\n        </body>\r\n      </html>\r\n    </MantineProvider>\r\n  );\r\n}\r\n", "import type { MantineThemeOverride } from \"@mantine/core\";\r\n\r\nexport const theme: MantineThemeOverride = {\r\n  colorScheme: \"dark\",\r\n};\r\n", "import { Text, Button, Stack } from \"@mantine/core\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <Stack align=\"center\" mt={50}>\r\n      <Text size=\"xl\" weight={500}>\r\n        Welcome to Mantine!\r\n      </Text>\r\n      <Button>Click the button</Button>\r\n    </Stack>\r\n  );\r\n}\r\n", "export default {'version':'e881e2c7','entry':{'module':'/build/entry.client-MNHPJIX3.js','imports':['/build/_shared/chunk-74WEL7RM.js','/build/_shared/chunk-RIK5VUO2.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GY7KA7ZX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-6ADJPSDL.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-E881E2C7.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA,oBAA+B,6BAC/B,eAA4B,6BAE5B,eAAiD,2BAHjD,2DAKM,aAAS,iCAAmB;AAEnB,SAAR,cACL,SACA,oBACA,iBACA,cACA;AACA,MAAI,aAAS;AAAA,IACX,mDAAC;AAAA,MAAY,SAAS;AAAA,MAAc,KAAK,QAAQ;AAAA,OAAjD;AAAA;AAAA;AAAA;AAAA,WAAsD;AAAA,EACxD;AACA,yBAAgB,IAAI,gBAAgB,WAAW,GAExC,IAAI,SAAS,sBAAkB,2BAAa,QAAQ,MAAM,KAAK;AAAA,IACpE,QAAQ;AAAA,IACR,SAAS;AAAA,EACX,CAAC;AACH;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAA,gBAOO,6BACP,cAAoD,0BACpDC,gBAAkC;;;ACR3B,IAAM,QAA8B;AAAA,EACzC,aAAa;AACf;;;ADJA,+DAaa,OAAqB,OAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AACZ;AAAA,IAEA,gCAAmB,EAAE,KAAK,UAAU,CAAC;AAEtB,SAAR,MAAuB;AAC5B,SACE,mDAAC;AAAA,IAAgB;AAAA,IAAc,kBAAgB;AAAA,IAAC,kBAAgB;AAAA,IAC9D,6DAAC;AAAA,MAAK,MAAK;AAAA,MACT;AAAA,2DAAC;AAAA,UACC;AAAA,+DAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,mBAAmB;AAAA,YACnB,mDAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,mBAAM;AAAA,YACN,mDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,mBAAO;AAAA;AAAA,WAHT;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,QACA,mDAAC;AAAA,UACC;AAAA,+DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,mBAAQ;AAAA,YACR,mDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,mBAAmB;AAAA,YACnB,mDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,mBAAS;AAAA,YACT,mDAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,mBAAY;AAAA;AAAA,WAJd;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA;AAAA,OAXF;AAAA;AAAA;AAAA;AAAA,WAYA;AAAA,KAbF;AAAA;AAAA;AAAA;AAAA,SAcA;AAEJ;;;AEvCA;AAAA;AAAA;AAAA;AAAA,IAAAC,eAAoC,0BAApC;AAEe,SAAR,QAAyB;AAC9B,SACE,mDAAC;AAAA,IAAM,OAAM;AAAA,IAAS,IAAI;AAAA,IACxB;AAAA,yDAAC;AAAA,QAAK,MAAK;AAAA,QAAK,QAAQ;AAAA,QAAK;AAAA,SAA7B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC;AAAA,QAAO;AAAA,SAAR;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA;AAAA,KAJ1B;AAAA;AAAA;AAAA;AAAA,SAKA;AAEJ;;;ACXA,IAAO,0BAAQ,EAAC,SAAU,YAAW,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,mCAAkC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,EAAC,GAAE,KAAM,8BAA6B;;;ACKlsB,IAAM,uBAAuB,iBACvB,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["import_react", "import_remix", "import_core"]
}
